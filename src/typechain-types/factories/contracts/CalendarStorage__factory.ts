/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CalendarStorage,
  CalendarStorageInterface,
} from "../../contracts/CalendarStorage";

const _abi = [
  {
    inputs: [],
    name: "availability",
    outputs: [
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "timeZone",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "availableDays",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "earliestStartMinutes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minutesAvailable",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dateToMeetings",
    outputs: [
      {
        internalType: "address",
        name: "attendee",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "startMinutes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "durationMinutes",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profile",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "picture",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e5dcee414610046578063ab60636c14610088578063c9b53900146100a1575b600080fd5b61005961005436600461052c565b6100ba565b604080516001600160a01b03909416845261ffff92831660208501529116908201526060015b60405180910390f35b610090610124565b60405161007f9594939291906105ab565b6100a96103ee565b60405161007f959493929190610618565b600060205283600052604060002060205282600052604060002060205281600052604060002081815481106100ee57600080fd5b6000918252602090912001546001600160a01b038116945061ffff600160a01b820481169450600160b01b909104169150849050565b60018054819061013390610663565b80601f016020809104026020016040519081016040528092919081815260200182805461015f90610663565b80156101ac5780601f10610181576101008083540402835291602001916101ac565b820191906000526020600020905b81548152906001019060200180831161018f57829003601f168201915b5050505050908060010180546101c190610663565b80601f01602080910402602001604051908101604052809291908181526020018280546101ed90610663565b801561023a5780601f1061020f5761010080835404028352916020019161023a565b820191906000526020600020905b81548152906001019060200180831161021d57829003601f168201915b50505050509080600201805461024f90610663565b80601f016020809104026020016040519081016040528092919081815260200182805461027b90610663565b80156102c85780601f1061029d576101008083540402835291602001916102c8565b820191906000526020600020905b8154815290600101906020018083116102ab57829003601f168201915b5050505050908060030180546102dd90610663565b80601f016020809104026020016040519081016040528092919081815260200182805461030990610663565b80156103565780601f1061032b57610100808354040283529160200191610356565b820191906000526020600020905b81548152906001019060200180831161033957829003601f168201915b50505050509080600401805461036b90610663565b80601f016020809104026020016040519081016040528092919081815260200182805461039790610663565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b5050505050905085565b6006805481906103fd90610663565b80601f016020809104026020016040519081016040528092919081815260200182805461042990610663565b80156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b50505050509080600101805461048b90610663565b80601f01602080910402602001604051908101604052809291908181526020018280546104b790610663565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050506002909301549192505060ff81169061ffff6101008204811691630100000090041685565b6000806000806080858703121561054257600080fd5b5050823594602084013594506040840135936060013592509050565b6000815180845260005b8181101561058457602081850181015186830182015201610568565b81811115610596576000602083870101525b50601f01601f19169290920160200192915050565b60a0815260006105be60a083018861055e565b82810360208401526105d0818861055e565b905082810360408401526105e4818761055e565b905082810360608401526105f8818661055e565b9050828103608084015261060c818561055e565b98975050505050505050565b60a08152600061062b60a083018861055e565b828103602084015261063d818861055e565b60ff969096166040840152505061ffff9283166060820152911660809091015292915050565b600181811c9082168061067757607f821691505b6020821081141561069857634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122016402cd651aa2bf7b1fc431de7e59aac609a88412a8289ab5638c289403f072464736f6c63430008090033";

type CalendarStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalendarStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CalendarStorage__factory extends ContractFactory {
  constructor(...args: CalendarStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalendarStorage> {
    return super.deploy(overrides || {}) as Promise<CalendarStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CalendarStorage {
    return super.attach(address) as CalendarStorage;
  }
  override connect(signer: Signer): CalendarStorage__factory {
    return super.connect(signer) as CalendarStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalendarStorageInterface {
    return new utils.Interface(_abi) as CalendarStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalendarStorage {
    return new Contract(address, _abi, signerOrProvider) as CalendarStorage;
  }
}
