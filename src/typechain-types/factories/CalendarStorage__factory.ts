/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CalendarStorage,
  CalendarStorageInterface,
} from "../CalendarStorage";

const _abi = [
  {
    inputs: [],
    name: "availability",
    outputs: [
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "timeZone",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "availableDays",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "earliestTimeInMinutes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minutesAvailable",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dateToMeetings",
    outputs: [
      {
        internalType: "address",
        name: "attendee",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "hour",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "minute",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "duration",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profile",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "picture",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108fb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e5dcee414610046578063ab60636c14610079578063c9b539001461009b575b600080fd5b610060600480360381019061005b91906105ce565b6100bd565b6040516100709493929190610693565b60405180910390f35b61008161016a565b604051610092959493929190610771565b60405180910390f35b6100a3610436565b6040516100b4959493929190610803565b60405180910390f35b600060205283600052604060002060205282600052604060002060205281600052604060002081815481106100f157600080fd5b906000526020600020016000935093505050508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900461ffff16908060000160169054906101000a900461ffff16908060000160189054906101000a900461ffff16905084565b600180600001805461017b90610893565b80601f01602080910402602001604051908101604052809291908181526020018280546101a790610893565b80156101f45780601f106101c9576101008083540402835291602001916101f4565b820191906000526020600020905b8154815290600101906020018083116101d757829003601f168201915b50505050509080600101805461020990610893565b80601f016020809104026020016040519081016040528092919081815260200182805461023590610893565b80156102825780601f1061025757610100808354040283529160200191610282565b820191906000526020600020905b81548152906001019060200180831161026557829003601f168201915b50505050509080600201805461029790610893565b80601f01602080910402602001604051908101604052809291908181526020018280546102c390610893565b80156103105780601f106102e557610100808354040283529160200191610310565b820191906000526020600020905b8154815290600101906020018083116102f357829003601f168201915b50505050509080600301805461032590610893565b80601f016020809104026020016040519081016040528092919081815260200182805461035190610893565b801561039e5780601f106103735761010080835404028352916020019161039e565b820191906000526020600020905b81548152906001019060200180831161038157829003601f168201915b5050505050908060040180546103b390610893565b80601f01602080910402602001604051908101604052809291908181526020018280546103df90610893565b801561042c5780601f106104015761010080835404028352916020019161042c565b820191906000526020600020905b81548152906001019060200180831161040f57829003601f168201915b5050505050905085565b600680600001805461044790610893565b80601f016020809104026020016040519081016040528092919081815260200182805461047390610893565b80156104c05780601f10610495576101008083540402835291602001916104c0565b820191906000526020600020905b8154815290600101906020018083116104a357829003601f168201915b5050505050908060010180546104d590610893565b80601f016020809104026020016040519081016040528092919081815260200182805461050190610893565b801561054e5780601f106105235761010080835404028352916020019161054e565b820191906000526020600020905b81548152906001019060200180831161053157829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900461ffff16908060020160039054906101000a900461ffff16905085565b600080fd5b6000819050919050565b6105ab81610598565b81146105b657600080fd5b50565b6000813590506105c8816105a2565b92915050565b600080600080608085870312156105e8576105e7610593565b5b60006105f6878288016105b9565b9450506020610607878288016105b9565b9350506040610618878288016105b9565b9250506060610629878288016105b9565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061066082610635565b9050919050565b61067081610655565b82525050565b600061ffff82169050919050565b61068d81610676565b82525050565b60006080820190506106a86000830187610667565b6106b56020830186610684565b6106c26040830185610684565b6106cf6060830184610684565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107125780820151818401526020810190506106f7565b83811115610721576000848401525b50505050565b6000601f19601f8301169050919050565b6000610743826106d8565b61074d81856106e3565b935061075d8185602086016106f4565b61076681610727565b840191505092915050565b600060a082019050818103600083015261078b8188610738565b9050818103602083015261079f8187610738565b905081810360408301526107b38186610738565b905081810360608301526107c78185610738565b905081810360808301526107db8184610738565b90509695505050505050565b600060ff82169050919050565b6107fd816107e7565b82525050565b600060a082019050818103600083015261081d8188610738565b905081810360208301526108318187610738565b905061084060408301866107f4565b61084d6060830185610684565b61085a6080830184610684565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108ab57607f821691505b602082108114156108bf576108be610864565b5b5091905056fea2646970667358221220fb9767a28d6816835a79a760d35f6fd1f2cff1512001530ec66c73278dc8fea564736f6c63430008090033";

type CalendarStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalendarStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CalendarStorage__factory extends ContractFactory {
  constructor(...args: CalendarStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalendarStorage> {
    return super.deploy(overrides || {}) as Promise<CalendarStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CalendarStorage {
    return super.attach(address) as CalendarStorage;
  }
  override connect(signer: Signer): CalendarStorage__factory {
    return super.connect(signer) as CalendarStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalendarStorageInterface {
    return new utils.Interface(_abi) as CalendarStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalendarStorage {
    return new Contract(address, _abi, signerOrProvider) as CalendarStorage;
  }
}
